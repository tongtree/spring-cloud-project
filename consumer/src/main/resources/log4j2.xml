<?xml version="1.0" encoding="UTF-8"?>
<Configuration status="WARN">

    <!--全局参数-->
    <Properties>
        <Property name="pattern">%d{yyyy-MM-dd HH:mm:ss,SSS} %5p %t %c{1}:%L - %m%n</Property>
        <Property name="logDir">./consumer/logs</Property>
        <property name="every_file_size">50M</property><!-- 日志切割的最小单位 -->
    </Properties>

    <Appenders>
        <!-- 定义输出到控制台 -->
        <Console name="console" target="SYSTEM_OUT" follow="true">
            <!--控制台只输出level及以上级别的信息-->
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout>
                <Pattern>${pattern}</Pattern>
            </PatternLayout>
        </Console>
        <!-- 同一来源的Appender可以定义多个RollingFile，定义按天存储日志 -->
        <RollingFile name="infoFile"
                     fileName="${logDir}/consume.log"
                     filePattern="${logDir}/consume_%d{yyyy-MM-dd}.log">
            <ThresholdFilter level="INFO" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout>
                <Pattern>${pattern}</Pattern>
            </PatternLayout>
            <Policies>
                <!--                以时间为单位的策略；粒度粗细跟【filePattern】里的时间设定有关，-->
                <!--                目前是%d{yyyy-MM-dd} ,interval="1",所以时间策略就是每天-->
                <!--                如果是%d{yyyy-MM-dd HH-mm} ,interval="1",则时间策略就是每分钟-->
                <TimeBasedTriggeringPolicy interval="1"/>
            </Policies>
            <!-- SizeBasedTriggeringPolicy: 基于日志大小切分日志 -->
            <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            <!-- 日志保留策略，配置只保留七天 -->
            <DefaultRolloverStrategy>
                <Delete basePath="${logDir}/" maxDepth="1">
                    <IfFileName glob="consume_*.log"/>
                    <IfLastModified age="7d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
        <RollingFile name="errorFile"
                     fileName="${logDir}/consume_error.log"
                     filePattern="${logDir}/consume_error_%d{yyyy-MM-dd}.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <!--            输出格式，不设置默认为%m%n-->
            <PatternLayout>
                <Pattern>${pattern}</Pattern>
            </PatternLayout>
            <!-- 指定滚动日志的策略，就是什么时候进行新建日志文件输出日志-->
            <Policies>
                <TimeBasedTriggeringPolicy interval="1"/>
            </Policies>
            <!-- SizeBasedTriggeringPolicy: 基于日志大小切分日志 -->
            <SizeBasedTriggeringPolicy size="${every_file_size}"/>
            <!-- 日志保留策略，配置只保留七天 -->
            <DefaultRolloverStrategy>
                <Delete basePath="${logDir}/" maxDepth="1">
                    <IfFileName glob="consume_*.log"/>
                    <IfLastModified age="7d"/>
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>
    </Appenders>

    <Loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.mybatis" level="info" additivity="false">
            <AppenderRef ref="Console"/>
        </logger>
        <!--监控系统信息-->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
<!--        <Logger name="org.springframework" level="info" additivity="false">-->
<!--            <AppenderRef ref="Console"/>-->
<!--        </Logger>-->
<!--        <logger name="com.zaxxer.hikari.pool.PoolBase" level="ERROR" additivity="false"/>-->
<!--        <logger name="com.zaxxer.hikari.pool.HikariPool" level="ERROR" additivity="false"/>-->
<!--        <logger name="com.zaxxer.hikari.HikariDataSource" level="ERROR" additivity="false"/>-->
<!--        <logger name="org.springframework.jdbc.datasource" level="ERROR" additivity="false"/>-->
        <Root level="INFO">
            <AppenderRef ref="console"/>
            <AppenderRef ref="infoFile"/>
            <AppenderRef ref="errorFile"/>
        </Root>
    </Loggers>
</Configuration>
